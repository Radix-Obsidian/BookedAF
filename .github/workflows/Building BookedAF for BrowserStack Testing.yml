#!/bin/bash

# BookedAF Build Script for BrowserStack Testing
echo "🏗️  Building BookedAF for BrowserStack Testing..."

# Clean previous builds
echo "🧹 Cleaning previous builds..."
flutter clean
flutter pub get

# Check for Android SDK
if [ -z "$ANDROID_HOME" ]; then
    echo "❌ Android SDK not found. Skipping Android build."
    echo "💡 To build APK: Install Android Studio and set ANDROID_HOME"
else
    echo "📱 Building Android APK..."
    flutter build apk --release
    
    if [ $? -eq 0 ]; then
        echo "✅ Android APK built successfully!"
        echo "📍 Location: build/app/outputs/flutter-apk/app-release.apk"
    else
        echo "❌ Android APK build failed"
    fi
fi

# Build iOS (if on macOS)
if [[ "$OSTYPE" == "darwin"* ]]; then
    echo "🍎 Building iOS app..."
    flutter build ios --release --no-codesign
    
    if [ $? -eq 0 ]; then
        echo "✅ iOS app built successfully!"
        echo "📍 Location: build/ios/iphoneos/Runner.app"
        
        # Create IPA if Xcode available
        if command -v xcodebuild &> /dev/null; then
            echo "📦 Creating IPA package..."
            cd ios
            
            # Archive the app
            xcodebuild -workspace Runner.xcworkspace \
                       -scheme Runner \
                       -configuration Release \
                       -destination generic/platform=iOS \
                       -archivePath build/Runner.xcarchive \
                       archive
            
            # Export IPA (requires ExportOptions.plist)
            if [ -f "ExportOptions.plist" ]; then
                xcodebuild -exportArchive \
                           -archivePath build/Runner.xcarchive \
                           -exportOptionsPlist ExportOptions.plist \
                           -exportPath build/
                
                if [ $? -eq 0 ]; then
                    echo "✅ IPA created successfully!"
                    echo "📍 Location: ios/build/BookedAF.ipa"
                fi
            else
                echo "⚠️  ExportOptions.plist not found. Creating basic version..."
                cat > ExportOptions.plist << EOF
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
    <key>method</key>
    <string>development</string>
    <key>teamID</key>
    <string>YOUR_TEAM_ID</string>
</dict>
</plist>
EOF
                echo "📝 Created basic ExportOptions.plist - update with your Team ID"
            fi
            
            cd ..
        else
            echo "⚠️  Xcode not available for IPA creation"
        fi
    else
        echo "❌ iOS build failed"
    fi
else
    echo "⚠️  iOS build only available on macOS"
fi

echo ""
echo "🎯 Build Summary:"
echo "=================="

# Check build outputs
if [ -f "build/app/outputs/flutter-apk/app-release.apk" ]; then
    apk_size=$(du -h build/app/outputs/flutter-apk/app-release.apk | cut -f1)
    echo "✅ Android APK: $apk_size (build/app/outputs/flutter-apk/app-release.apk)"
else
    echo "❌ Android APK: Not built"
fi

if [ -f "build/ios/iphoneos/Runner.app" ]; then
    echo "✅ iOS App: Available (build/ios/iphoneos/Runner.app)"
else
    echo "❌ iOS App: Not built"
fi

if [ -f "ios/build/BookedAF.ipa" ]; then
    ipa_size=$(du -h ios/build/BookedAF.ipa | cut -f1)
    echo "✅ iOS IPA: $ipa_size (ios/build/BookedAF.ipa)"
else
    echo "❌ iOS IPA: Not created"
fi

echo ""
echo "🌐 Ready for BrowserStack Testing!"
echo "📱 Upload the built files to BrowserStack App Testing"
echo "🧪 Test Phase 1: Customer + Professional registration flows"
